" shouldn't need to shift for colon
nnoremap ; :" remap leader key

let mapleader = ","
" hit jj to escape instead of moving your hand
inoremap jj <esc>

" searching and movement ====================================================

" sane regex
"nnoremap / /\v
"vnoremap / /\v

"nnoremap <tab> %
"vnoremap <tab> %

" move by screen line instead of file line
nnoremap j gj
nnoremap k gk

" remap f1 to escape to stop hitting help by accident
inoremap <f1> <esc>
nnoremap <f1> <esc>
vnoremap <f1> <esc>

" Create a more sane way to switch window panes
nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l

" easy ways to create and destroy panes
nnoremap <leader>v <c-w>v<c-w>l
nnoremap <leader>s <c-w>s<c-w>j
nnoremap <leader>q :q<enter>

" Resize window panes easily
nnoremap <silent> <leader>= :exe "resize " . (winheight(0) * 3/2)<CR>
nnoremap <silent> <leader>- :exe "resize " . (winheight(0) * 2/3)<CR>

nnoremap <silent> <leader>+ :exe "vertical resize " . (winwidth(0) * 3/2)<CR>
nnoremap <silent> <leader>_ :exe "vertical resize " . (winwidth(0) * 2/3)<CR>

" creating and moving between tabs
nnoremap <leader>u :tabp<enter>
nnoremap <leader>l :tabn<enter>
nnoremap <leader>[ :tabp<enter>
nnoremap <leader>] :tabn<enter>
nnoremap <leader>n :tabnew<enter>

" ACK
" nnoremap <Leader>a :Ack!<Space>

" Ack for word under cursor
" nnoremap <silent> <Leader>A yiw:Ack <C-r>"<cr>

" ctrl-u in insert mode deletes a lot.  use ctrl-g u to first break undo,
" so that you can undo ctrl-u after inserting a line break.
inoremap <c-u> <c-g>u<c-u>

"nmap <silent> ,/ :nohlsearch<CR>

map <c-h> :tabprevious<CR>
map <c-l> :tabnext<CR>

map <c-n> :NERDTreeToggle<CR>

nnoremap <silent> <C-p> :FZF<CR>

noremap <Leader><tab> :NERDTreeToggle<cr>

" tComment
map <silent> <Leader>cc :TComment<cr>
map <silent> <Leader>c<Space> :TComment<cr>


" Sort selected text
map <Leader>S :sort u<CR>

" Run prettier on the selected text
map <Leader>P :PrettierPartial<CR>

" Run prettier command sometimes this mapping disapears?????
map <Leader>F :Neoformat prettier<CR>

" autocmd FileType python map <Leader>F :Neoformat black<CR>

nnoremap <leader><space> :noh<CR><CR>:<backspace>

" Remap keys for gotos
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)

" Refresh the file syntax highlighting
map <F12> :syntax sync fromstart<CR>

" Symbol renaming.
nmap <leader>rn <Plug>(coc-rename)

" Use K to show documentation in preview window.
nnoremap <silent> K :call <SID>show_documentation()<CR>

function! s:show_documentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  elseif (coc#rpc#ready())
    call CocActionAsync('doHover')
  else
    execute '!' . &keywordprg . " " . expand('<cword>')
  endif
endfunction

" Copy relative path
map <Leader>fr :let @+ = expand("%")<CR>
" Copy full path
map <Leader>fp :let @+ = expand("%:p")<CR>
" Copy file name
map <Leader>fn :let @+ = expand("%:t")<CR>
